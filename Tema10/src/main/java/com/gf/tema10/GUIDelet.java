/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.gf.tema10;

import static com.gf.tema10.EjemploCRUD.conn;
import static com.gf.tema10.EjemploCRUD.passwd;
import static com.gf.tema10.EjemploCRUD.urlBD;
import static com.gf.tema10.EjemploCRUD.user;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author nicol
 */
public class GUIDelet extends javax.swing.JDialog {

    /**
     * Creates new form GUIDelet
     */
    
    private String valorPK;
    private final EjemploCRUD guiPrincipal;
    
    public GUIDelet(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        guiPrincipal =(EjemploCRUD) parent;
        setFrame();

    }

    public void setFrame(){
        this.setTitle("Actualizacion de datos en la BD: " + EjemploCRUD.bd);
        this.setLocationRelativeTo(guiPrincipal);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        PK_a_editar = new javax.swing.JTextField();
        aceptar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Borrar = new javax.swing.JButton();
        Cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Inserte la PK del ememento a modificar");

        PK_a_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PK_a_editarActionPerformed(evt);
            }
        });

        aceptar.setText("ok");
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        Borrar.setText("Borrar");
        Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarActionPerformed(evt);
            }
        });

        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PK_a_editar, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(aceptar)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(Borrar)
                .addGap(105, 105, 105)
                .addComponent(Cancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(PK_a_editar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aceptar))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Borrar)
                    .addComponent(Cancelar))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PK_a_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PK_a_editarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PK_a_editarActionPerformed

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
        // TODO add your handling code here:
        valorPK = PK_a_editar.getText();
        if (valorPK.isEmpty() ){
            JOptionPane.showMessageDialog(this, "Debe ingresar una clave primaria.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int pk = Integer.parseInt(valorPK);
        // Select antes de editar
        try {
            //coonectamos con la tabla
            conn=DriverManager.getConnection(urlBD,user,passwd);
            //ejecutamos consulta select
            String sql = "select * from tabla_a where a1=? ";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, pk);
            ResultSet rs = ps.executeQuery();

            if(rs.next()){
                int a1= rs.getInt("a1");
                String a2=rs.getString("a2");
                double a3= rs.getDouble("a3");
                Date a4 = rs.getDate("a4");
                jLabel2.setText("Fila seleccionada: "+a1+", "+ a2+", "+a3+" ,"+a4);
            }else {
                jLabel2.setText("No se encontro con esa PK");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error con la conexion con la BD", "Desconexion BD", JOptionPane.ERROR_MESSAGE);
        } finally{
            try {
                conn.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Error al cerrar BD","Desconexion BD", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_aceptarActionPerformed

    private void BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarActionPerformed
        // TODO add your handling code here:
         borrar();
         this.dispose();
        
    }//GEN-LAST:event_BorrarActionPerformed

    private void borrar(){
    if (valorPK.isEmpty()){
        JOptionPane.showMessageDialog(this, "Debe ingresar una clave primaria.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    int confirmacion = JOptionPane.showConfirmDialog(this, "¿Deseas eliminar el registro con id " + valorPK + "?", "Confirmación", JOptionPane.YES_NO_OPTION);

    if (confirmacion == JOptionPane.YES_OPTION) {
        java.sql.Connection conn = null;
        PreparedStatement ps = null;

        try {
            // 1. Abrir conexión
            conn = guiPrincipal.abrirConexion();

            // 2. Preparar la consulta SQL
            String sql = "DELETE FROM tabla_a WHERE a1 = ?";
            ps = conn.prepareStatement(sql);
            ps.setInt(1, Integer.parseInt(valorPK));

            // 3. Ejecutar la consulta
            int filasAfectadas = ps.executeUpdate();

            // 4. Mostrar mensaje
            if (filasAfectadas > 0) {
                JOptionPane.showMessageDialog(this, "Registro eliminado correctamente.");
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró el registro con esa clave primaria.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al conectar con la base de datos: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (ps != null) ps.close();
                if (conn != null) conn.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error al cerrar la base de datos", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
}
  
    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_CancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIDelet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIDelet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIDelet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIDelet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GUIDelet dialog = new GUIDelet(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Borrar;
    private javax.swing.JButton Cancelar;
    private javax.swing.JTextField PK_a_editar;
    private javax.swing.JButton aceptar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
