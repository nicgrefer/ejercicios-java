/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.gf.tema10;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author sandr
 */
public class EjemploCRUD extends javax.swing.JFrame {
    public static String bd="ejemplo";
    public static String urlBD= "jdbc:mysql://localhost:3306/"+bd; //Direccion de nuestro sql
    public static String user= "root"; //usuario de la BD
    public static String passwd=""; //Contrasenia del usuario
    public static Connection conn;
    public static GUIInsertarDatos guiInsertar;
    
    /**
     * Creates new form Ejemplo1
     */
    public EjemploCRUD() {
        initComponents();
        setFrame();
        
    }

    private void setFrame(){
        this.setTitle("Primer ejemplo JDBC");
        this.setLocationRelativeTo(null);
    }
    
    public Connection abrirConexion() throws SQLException{
        try{
            return DriverManager.getConnection(urlBD,user,passwd);
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this, "Error al conectar con la base de datos", "Conexion BD", JOptionPane.ERROR_MESSAGE);
        }
        return null;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar = new javax.swing.JMenuBar();
        jMenuBD = new javax.swing.JMenu();
        jMenuItemConectar = new javax.swing.JMenuItem();
        jMenuCRUD = new javax.swing.JMenu();
        jMenuItemSelect = new javax.swing.JMenuItem();
        jMenuItemInsert = new javax.swing.JMenuItem();
        jMenuItemUpdate = new javax.swing.JMenuItem();
        jMenuItemDelete = new javax.swing.JMenuItem();
        jMenuApp = new javax.swing.JMenu();
        jMenuItemSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenuBD.setText("BD");

        jMenuItemConectar.setText("Conectar");
        jMenuItemConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConectarActionPerformed(evt);
            }
        });
        jMenuBD.add(jMenuItemConectar);

        jMenuBar.add(jMenuBD);

        jMenuCRUD.setText("CRUD");

        jMenuItemSelect.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemSelect.setText("Select");
        jMenuItemSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSelectActionPerformed(evt);
            }
        });
        jMenuCRUD.add(jMenuItemSelect);

        jMenuItemInsert.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemInsert.setText("Insert");
        jMenuItemInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemInsertActionPerformed(evt);
            }
        });
        jMenuCRUD.add(jMenuItemInsert);

        jMenuItemUpdate.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemUpdate.setText("Update");
        jMenuCRUD.add(jMenuItemUpdate);

        jMenuItemDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemDelete.setText("Delete");
        jMenuCRUD.add(jMenuItemDelete);

        jMenuBar.add(jMenuCRUD);

        jMenuApp.setText("Aplicaci√≥n");

        jMenuItemSalir.setText("Salir");
        jMenuItemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSalirActionPerformed(evt);
            }
        });
        jMenuApp.add(jMenuItemSalir);

        jMenuBar.add(jMenuApp);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemInsertActionPerformed
        // Abrimos la ventana para introducir los nuevos datos
        guiInsertar=new GUIInsertarDatos(this, true);
        guiInsertar.setVisible(true);
    }//GEN-LAST:event_jMenuItemInsertActionPerformed

    private void jMenuItemConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConectarActionPerformed
        try {
            // TODO add your handling code here:
            //Conectar
            conn=abrirConexion();
            if(conn != null){
                JOptionPane.showMessageDialog(this, "Conexion realizada con exito", "Conexion", JOptionPane.PLAIN_MESSAGE);
                this.jMenuBD.setEnabled(false);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al conectar con la base de datos", "Conexion BD", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemConectarActionPerformed

    private void jMenuItemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSalirActionPerformed
        try{
            conn.close();
            this.dispose();
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this, "Error al cerrar la conexion con la BD", "Desconexion BD", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemSalirActionPerformed

    private void jMenuItemSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSelectActionPerformed
        try {
            //coonectamos con la tabla
            conn=DriverManager.getConnection(urlBD,user,passwd);
            //ejecutamos consulta select
            String sql = "select * from tabla_a;";
            Statement st=conn.createStatement();
            ResultSet rs= st.executeQuery(sql);
            while(rs.next()){
                //procesamos la fila actual del conjunto de filas
                int a1= rs.getInt("a1");
                String a2=rs.getString("a2");
                double a3= rs.getDouble("a3");
                Date a4 = rs.getDate("a4");
                System.out.printf("%d -- %s -- %.2f -- %s %n", a1,a2,a3,a4);
            }
            
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error con la conexion con la BD", "Desconexion BD", JOptionPane.ERROR_MESSAGE);
        } finally{
            try {
                conn.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Error al cerrar BD","Desconexion BD", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jMenuItemSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EjemploCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EjemploCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EjemploCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EjemploCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EjemploCRUD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenuApp;
    private javax.swing.JMenu jMenuBD;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuCRUD;
    private javax.swing.JMenuItem jMenuItemConectar;
    private javax.swing.JMenuItem jMenuItemDelete;
    private javax.swing.JMenuItem jMenuItemInsert;
    private javax.swing.JMenuItem jMenuItemSalir;
    private javax.swing.JMenuItem jMenuItemSelect;
    private javax.swing.JMenuItem jMenuItemUpdate;
    // End of variables declaration//GEN-END:variables
}
