/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Eejercicios;

import java.awt.Dimension;
import java.util.Arrays;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sandr
 */
public class Permutacion extends javax.swing.JFrame {

    private Integer[][]matriz; //matriz de enteros aleatorios
    private JTable tabla; //control para mostras la matriz enteros
    private DefaultTableModel modeloTabla; //contenedor de la matriz de enteros
    private String[] titulosColumnas; //titulos de la columnas de la tabla
    
    
    /**
     * Creates new form Permutacion
     */
    public Permutacion() {
        initComponents();
        setFrame();
        setSpinner();
        
    }

    public void setFrame(){
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setTitle("Permutacion");
    }
    
    public void setSpinner(){
        //asignamos a los spinners los modelos de datos que determinan la dimension de la matriz
        this.spinnerFilas.setModel(new SpinnerNumberModel (1,1,10,1));
        this.spinnerColumnas.setModel(new SpinnerNumberModel (1,1,10,1));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        spinnerFilas = new javax.swing.JSpinner();
        spinnerColumnas = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        BotonCrearMatriz = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        BotonPermutarFilas = new javax.swing.JButton();
        BotonPermutarColumnas = new javax.swing.JButton();
        ScrollTabla = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Crear matriz"));

        jLabel1.setText("x");

        BotonCrearMatriz.setText("â–¶");
        BotonCrearMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCrearMatrizActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(spinnerFilas, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spinnerColumnas, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(BotonCrearMatriz)
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerFilas, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(spinnerColumnas, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonCrearMatriz, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(javax.swing.UIManager.getDefaults().getColor("Button.focusedBorderColor")));

        BotonPermutarFilas.setText("Permutar FIlas");
        BotonPermutarFilas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPermutarFilasActionPerformed(evt);
            }
        });

        BotonPermutarColumnas.setText("Permutar Columnas");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotonPermutarColumnas)
                    .addComponent(BotonPermutarFilas, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(BotonPermutarFilas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BotonPermutarColumnas)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ScrollTabla, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ScrollTabla, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonCrearMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCrearMatrizActionPerformed
        // TODO add your handling code here:
        crearMatriz();
        mostrarMatriz();
    }//GEN-LAST:event_BotonCrearMatrizActionPerformed

    private void BotonPermutarFilasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPermutarFilasActionPerformed
        // TODO add your handling code here:
        if(matriz == null){
            JOptionPane.showMessageDialog(this, "Primero crea la matriz desgraciao", "Error", JOptionPane.OK_OPTION);
            return;
        }
            Integer [] valores = new Integer[matriz.length];
            for (int i = 0; i < valores.length; i++) {
                valores[i]=i;
                
            }
            
           Integer filaOrigen= (Integer) JOptionPane.showInputDialog(this, "Fila origen:","Permutar filas",
                    JOptionPane.INFORMATION_MESSAGE, null, valores, valores[0]);
           Integer filaDestino= (Integer) JOptionPane.showInputDialog(this, "Fila destino:","Permutar filas",
                    JOptionPane.INFORMATION_MESSAGE, null, valores, valores[0]);
        
           //validamos el boton de cancelar
           if(filaOrigen==null || filaDestino==null){
               JOptionPane.showMessageDialog(this,"Debes de seleccionar valores para las filas", "Error", JOptionPane.OK_OPTION);
               return;
           }
           
        permutarFilas(filaOrigen,filaDestino);
    }//GEN-LAST:event_BotonPermutarFilasActionPerformed

    private void crearMatriz(){
        Integer numFilas=(Integer) this.spinnerFilas.getValue();
        Integer numColumnas=(Integer) this.spinnerColumnas.getValue();
        matriz= new Integer[numFilas][numColumnas];
        
        Random r = new Random ();
        
        for (int i = 0; i < numFilas; i++) {
            for (int j = 0; j < numColumnas; j++) {
                matriz[i][j]= r.nextInt(1,101);
            }
            
        }
    }
    
    private void mostrarMatriz(){
//        for (Integer [] vector:matriz){
//            System.out.println(Arrays.toString(vector));
//        }

        //configuramos los titulos de las columnas del JTable
        titulosColumnas = new String[matriz[0].length];
        Arrays.fill(titulosColumnas, "");
        
        //creamos el modelo de datos del JTable
        modeloTabla= new DefaultTableModel(matriz, titulosColumnas);
        
        //creamos el JTable con ese modelo
        tabla= new JTable(modeloTabla);
        
        //ocultamos los titulos de la tabla
        tabla.getTableHeader().setVisible(false);
        tabla.getTableHeader().setPreferredSize(new Dimension (0,0));
        
        //damos al scroll el JTable para que asï¿½ se vea
        this.ScrollTabla.setViewportView(tabla);
        this.repaint();
    }
    
    private void permutarFilas(int filaOrigen, int FilaDestino){
        
        
        mostrarMatriz();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Permutacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Permutacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Permutacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Permutacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Permutacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonCrearMatriz;
    private javax.swing.JButton BotonPermutarColumnas;
    private javax.swing.JButton BotonPermutarFilas;
    private javax.swing.JScrollPane ScrollTabla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSpinner spinnerColumnas;
    private javax.swing.JSpinner spinnerFilas;
    // End of variables declaration//GEN-END:variables
}
