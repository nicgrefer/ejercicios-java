package view;

import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import models.DatabaseConection;
import models.Imagenes;
import models.ImagenesDAO;
import javax.swing.Timer; // Importar Timer
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class Galeria extends javax.swing.JFrame {

    private ImagenesDAO imagenesDAO;
    private List<Imagenes> listaImagenes; // Lista de imágenes
    private int indiceActual = 0; // Índice de la imagen actual
    private Timer timer; // Timer para el bucle

    public Galeria() {
        initComponents();
        setFreim();
        DatabaseConection conn = new DatabaseConection();
        imagenesDAO = new ImagenesDAO(conn);
        

        // Cargar las imágenes y empezar el bucle
        cargarImagenesYComenzar();
    }

    public void setFreim() {
        this.setLocationRelativeTo(null);
         this.setMinimumSize(new Dimension (544,544)); 
        this.setPreferredSize(new Dimension (544,544));
        this.jTextPane1.getCaret().deinstall(jTextPane1);
        this.setTitle("Galeria de imagenes");
        this.jTextPane1.setContentType("text/html");
    }

    // Método para cargar imágenes y comenzar el Timer
    public void cargarImagenesYComenzar() {
        listaImagenes = imagenesDAO.cargarImagenes();

        if (listaImagenes != null && !listaImagenes.isEmpty()) {
            // Mostrar la primera imagen inicialmente
            mostrarImagen(indiceActual);

            // Configurar el Timer
            int retardoInicial = jSlider1.getValue() * 1000; // Convertir segundos a milisegundos
            timer = new Timer(retardoInicial, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    // Avanzar al siguiente índice
                    indiceActual++;
                    if (indiceActual >= listaImagenes.size()) {
                        indiceActual = 0; // Reiniciar al inicio (bucle)
                    }
                    mostrarImagen(indiceActual); // Mostrar la siguiente imagen
                }
            });
            timer.start(); // Iniciar el Timer
        }
    }

    // Método para mostrar una imagen en el JTextPane
    private void mostrarImagen(int indice) {
        Imagenes img = listaImagenes.get(indice);
        String url = img.getUrl();
        jTextPane1.setText("<html><body><img src='" + url + "' width='300'/></body></html>");
    }

 


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Spiner = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        Titulo = new javax.swing.JPanel();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jLabel3 = new javax.swing.JLabel();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0));
        Galeria = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Spiner.setLayout(new java.awt.GridLayout(0, 1, 10, 10));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Retardo (segundos)");
        Spiner.add(jLabel2);

        jSlider1.setMajorTickSpacing(1);
        jSlider1.setMaximum(10);
        jSlider1.setMinimum(1);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setValue(2);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        Spiner.add(jSlider1);

        getContentPane().add(Spiner, java.awt.BorderLayout.PAGE_END);

        Titulo.setLayout(new java.awt.GridLayout(1, 1));
        Titulo.add(filler4);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("BIEMBENIDO AL MUNDO JAVA!!");
        Titulo.add(jLabel3);
        Titulo.add(filler3);

        getContentPane().add(Titulo, java.awt.BorderLayout.PAGE_START);

        Galeria.setLayout(new java.awt.GridLayout(1, 1));

        jScrollPane2.setViewportView(jTextPane1);

        Galeria.add(jScrollPane2);

        getContentPane().add(Galeria, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        int sec = jSlider1.getValue();
        if (timer != null) {
            timer.setDelay(sec * 1000); // Actualizar el retardo en milisegundos
        }        
    }//GEN-LAST:event_jSlider1StateChanged

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Galeria;
    private javax.swing.JPanel Spiner;
    private javax.swing.JPanel Titulo;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables

    private void setMinimumSize(int i, int i0) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
